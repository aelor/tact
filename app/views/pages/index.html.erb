<style>
  body {
    font-family: medium-content-sans-serif-font,-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen,Ubuntu,Cantarell,"Open Sans","Helvetica Neue",sans-serif;
    letter-spacing: 0;
    font-weight: 400;
    font-style: normal;
    background: #ffffff;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -moz-font-feature-settings: "liga" on;
    color: rgba(0,0,0,.84);
    font-size: 14px;
  }

  #actual{
    opacity: 0;
    height: 0;
  }
  .highlight{
    background: yellow;
  }
</style>
<script>
  var activateTags = function() {
      $('#log li').click(function(){
          $('span').removeClass('highlight');
          var t = $(this).text().split(":")[0].toLowerCase();
          console.log(t);
          $( "span:contains('<"+t+"')" ).addClass( "highlight" );
      });
  };

  $(function(){
      var $log = $( "#log" ),
          str = $('.code').text(),
          html = $.parseHTML( str ),
          nodeNames = [],
          decorNodes = [];

      // Append the parsed HTML
      $( "#actual" ).append( html );

      var nodes = document.getElementById('actual').getElementsByTagName("*");
      $.each( nodes, function( i, el ) {
          nodeNames[ i ] = el.tagName;
      });

      result = { };
      for(var i = 0; i < nodeNames.length; ++i) {
          if(!result[nodeNames[i]])
              result[nodeNames[i]] = 0;
          ++result[nodeNames[i]];
      }

      // Gather the parsed HTML's node names
      $.each( Object.keys(result), function( i, el ) {
          decorNodes[ i ] = "<li>" + el + ":"+ result[el] + "</li>";
      });

      // Insert the node names
      $log.append( "<h3>Node Names:</h3>" );
      $( "<ol></ol>" )
          .append( decorNodes.join( "" ) )
          .appendTo( $log );

      activateTags();
  });
</script>
<%= form_tag '/', method: :get do %>
  <%= text_field_tag 'url', params[:url] %>
  <%= submit_tag 'Fetch' %>
<% end %>
<hr />
<div id="log"></div>
<div id="actual"></div>
<%= raw CodeRay.scan(@code, :html).div(:line_numbers => :table) %>